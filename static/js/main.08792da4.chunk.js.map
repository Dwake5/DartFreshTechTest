{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","matches","hasRun","data","letters","executionTime","getLetter","highest","Math","max","index","indexOf","calculateMatches","matchesLocal","t1","Date","now","targets","selections","groups","Object","keys","length","i","stringsList","values","y","includes","timeTaken","setState","this","className","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+OA0JeA,G,kNAtJbC,MAAQ,CACNC,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACpBC,QAAQ,EACRC,KAAM,CACN,OAAU,CACV,EAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC/F,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAExF,EAAM,CAAE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAExC,EAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC/F,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAEhE,EAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC/F,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,QAExB,EAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC/F,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAEhG,EAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC/F,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OAAQ,SAEhB,WAAc,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACvG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,SAEAC,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACnCC,cAAe,G,EAGjBC,UAAY,WACV,IAAIC,EAAUC,KAAKC,IAAL,MAAAD,KAAI,YAAQ,EAAKR,MAAMC,UACjCS,EAAQ,EAAKV,MAAMC,QAAQU,QAAQJ,GACvC,OAAO,EAAKP,MAAMI,QAAQM,I,EAG5BE,iBAAmB,WAOjB,IALA,IAAIC,EAAe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAC1BC,EAAKC,KAAKC,MACNb,EAAS,EAAKH,MAAdG,KACJc,EAAUd,EAAKe,WACfC,EAASC,OAAOC,KAAKlB,EAAKgB,QAAQG,OAC7BC,EAAI,EAAGA,EAAIJ,EAAQI,IAE1B,IADA,IAAIC,EAAcJ,OAAOK,OAAOtB,EAAKgB,QAAQI,GACpCG,EAAI,EAAGA,EAAIF,EAAYF,OAAQI,IAClCT,EAAQU,SAASH,EAAYE,KAC/Bb,EAAaU,KAInB,IACIK,EADKb,KAAKC,MACKF,EACnB,EAAKe,SAAS,CACZ5B,QAASY,EACTX,QAAQ,EACRG,cAAeuB,K,uDAIT,IAAD,SAC4BE,KAAK9B,MAAhCC,EADD,EACCA,QAASI,EADV,EACUA,cACjB,OACE,yBAAK0B,UAAU,OACb,oDACA,oKACA,4BAAQC,QAAS,kBAAM,EAAKpB,qBAA5B,qBACEkB,KAAK9B,MAAME,QACX,oCACE,+CAAqB4B,KAAKxB,YAA1B,SAA6CE,KAAKC,IAAL,MAAAD,KAAI,YAAQP,IAAzD,aACA,0CAAgBA,EAAQ,GAAxB,oBACA,0CAAgBA,EAAQ,GAAxB,oBACA,0CAAgBA,EAAQ,GAAxB,oBACA,0CAAgBA,EAAQ,GAAxB,oBACA,0CAAgBA,EAAQ,GAAxB,oBACA,0CAAgBA,EAAQ,GAAxB,oBACA,kDAAwBI,EAAxB,uB,GA7IM4B,cCSEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.08792da4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    matches: [0,0,0,0,0,0],\n    hasRun: false,\n    data: {\n    \"groups\": {\n    \"A\" : [\"A28S\", \"9I7I\", \"139Q\", \"I6NP\", \"98RK\", \"AJJ3\", \"PPSQ\", \"7ABB\", \"5MYS\", \"9QRW\", \"G6G8\", \"8MDU\",\n    \"9EQ2\", \"2XWN\", \"23SB\", \"T562\", \"NXRM\", \"U38I\", \"XRI4\", \"SNV0\", \"H1K6\", \"KHUG\", \"SL88\", \"LJ08\", \"DYV8\", \"MZJ8\",\n    \"ZFEP\", \"HPAX\", \"2SRP\", \"K3Y6\", \"DUMZ\", \"XNJT\", \"4PMM\", \"YP35\", \"266B\", \"GLEU\", \"W8HJ\", \"DFTS\", \"L11P\", \"I1R2\",\n    \"77O4\", \"HFUK\", \"340M\", \"HYPJ\", \"OGFO\", \"SBYZ\", \"NY78\", \"R350\", \"DQMO\", \"6K1K\", \"P9T4\", \"VEJH\", \"G7SJ\", \"329E\",\n    \"BNML\", \"HVK5\", \"KMEN\", \"V42B\", \"GYOZ\", \"NNUE\", \"IB4T\", \"WVRU\", \"58ZO\", \"PC2M\", \"BXBG\", \"BJSY\", \"AGRJ\", \"WFTC\",\n    \"0ARE\", \"SJWT\", \"OMLO\", \"Y0KM\", \"K4U7\", \"QVSU\", \"FW2W\", \"21JP\", \"K1X3\", \"MO09\", \"NLZY\", \"VZ1R\", \"7S8Q\", \"7I2L\",\n    \"ENN3\", \"F11W\", \"OYFB\", \"JXE8\", \"Y87E\", \"7GTK\", \"SM56\", \"YAZQ\", \"8UH5\", \"4XNQ\", \"QNC1\", \"23YL\", \"TFHL\", \"JLVW\",\n    \"JRRL\", \"6RIO\", \"WS6M\", \"RR0E\", \"GHCK\", \"WIK4\", \"8D8V\", \"KV20\", \"2MKS\", \"5V0O\", \"L0FL\", \"FS2T\"],\n    \n    \"B\" : [ \"WJ0P\", \"K26L\", \"B636\", \"F7SC\", \"4N0P\", \"XBDM\", \"KYOI\", \"AKEK\", \"2EC3\", \"MDP8\", \"9TY5\",\n    \"PJD1\", \"K6MG\", \"77JL\", \"ETI1\", \"EMZR\", \"Y0NJ\", \"HJGC\", \"KPVG\", \"K2QK\", \"O1LO\", \"EHAH\", \"2GZ9\", \"8J7V\", \"N84G\",\n    \"RCVD\", \"LP52\", \"JYMM\", \"GGE1\", \"XO8J\", \"B2C9\", \"XNCF\", \"M271\", \"LCBZ\", \"UU67\", \"R69Y\", \"BMFL\", \"04O7\", \"3P4H\",\n    \"55VX\", \"O38E\", \"61L5\", \"5W2J\", \"JV91\", \"CJCC\", \"U8PP\", \"AI75\", \"Y2ZV\", \"Z1EL\", \"U77Y\", \"K99F\", \"N3RW\", \"5HX3\",\n    \"JOEZ\", \"737Z\", \"59LD\", \"N6DV\", \"40Z4\", \"TOIB\", \"XGP3\", \"IMSE\", \"PPFH\", \"74L9\", \"43UE\", \"9GYZ\", \"CD7I\", \"GE5F\",\n    \"4M93\", \"58PC\", \"HILB\", \"9J1Z\", \"EHRE\", \"L58S\", \"EWQD\", \"R23Q\", \"SMN6\", \"KGLY\", \"3126\", \"1GUX\", \"A1ZD\", \"91OF\",\n    \"I3XA\", \"PMH0\", \"3SJQ\", \"VE16\", \"GZZI\", \"9340\", \"84EZ\", \"EZPQ\", \"E2F6\", \"8F3C\", \"DLKP\", \"PYSJ\", \"1IFH\", \"757V\",\n    \"NE5O\", \"3JWL\", \"X5X6\", \"V3K2\", \"NGIQ\", \"GSAD\", \"1VQK\", \"1QPN\", \"7GAS\", \"V41W\", \"VGHY\", \"XUU8\", \"F2AW\", \"P8RK\",\n    \"18ZT\", \"XP0P\", \"DYDO\", \"IP9G\", \"Z0EX\", \"059M\", \"WISU\", \"IMWR\", \"8UFZ\", \"23MZ\", \"VDG2\", \"WE8L\", \"TKOO\", \"5CH2\",\n    \"QIB4\", \"LKTP\", \"1G9G\", \"33IB\", \"9NGM\", \"14YC\", \"0ZY9\", \"56YM\", \"FDEE\", \"257B\", \"RK2Z\", \"2QYP\", \"LHQ7\", \"DKU8\",\n    \"DUR0\", \"NGYP\", \"3U1C\", \"NN86\", \"1UX6\", \"U15L\", \"ZGRH\", \"OF0V\", \"R2RF\", \"8LDY\", \"7F08\", \"S11Y\", \"P1QK\", \"JMW3\",\n    \"PMT2\", \"I8JR\", \"75IS\", \"PGR8\", \"XHV2\", \"6KWW\", \"ZG47\", \"5L8H\", \"7C9N\", \"IRA8\", \"C995\", \"0F2K\", \"PE0E\", \"7QMF\",\n    \"6PXK\", \"62W5\", \"LOK4\", \"BDJY\", \"9K3E\", \"VY6Z\"],\n    \n    \"C\" : [\"ALK5\", \"P1SE\", \"ENIO\", \"I5N4\", \"1PSK\", \"PQ19\", \"G55U\", \"27SI\", \"HVG1\", \"2IAV\", \"UZF7\", \"Q9XJ\",\n    \"YSRS\", \"FD68\", \"NRTB\", \"E657\", \"9MGA\", \"9N86\", \"MGSL\", \"6BBN\", \"62VH\", \"YK3E\", \"M56W\", \"Z7Q0\", \"QHXH\", \"NCRL\",\n    \"0GID\", \"XWN3\", \"5YRK\", \"HTCJ\", \"PKD9\", \"IOD6\", \"2BRY\", \"FS59\", \"Z0HD\", \"AK8W\", \"KZY4\", \"R3I2\", \"ZMLL\", \"1QV6\",\n    \"A5W1\", \"XS37\", \"QOT6\", \"LMQP\", \"M86N\", \"Y18P\", \"H94Q\", \"81PW\", \"5GWY\", \"2AFD\", \"4VJR\", \"BF37\", \"PQOC\", \"NE1O\",\n    \"MREY\", \"AN8O\", \"BLQA\", \"TDEQ\", \"851O\", \"JLYI\", \"ZX5P\", \"AR62\", \"GI7T\", \"TUFU\", \"3A1E\", \"7NS4\", \"ZUW1\", \"4OWP\",\n    \"TXTN\", \"8Z5V\", \"DGV7\", \"SZPN\", \"TJ8V\", \"AK9P\", \"XEQU\", \"R7A0\", \"JPCW\"],\n    \n    \"D\" : [\"B622\", \"0S4R\", \"NQQR\", \"8UL4\", \"3K2W\", \"O0K6\", \"1Z0C\", \"1V1T\", \"X3OY\", \"53TP\", \"5Q41\", \"ED31\",\n    \"D27H\", \"AO4B\", \"ME07\", \"1MQ9\", \"ITQ2\", \"I4KD\", \"YIJU\", \"4ZTE\", \"35KH\", \"TI7L\", \"24O3\", \"DU1I\", \"K2VI\", \"SP7L\",\n    \"5KHR\", \"E942\", \"GNVF\", \"W4RY\", \"NLEN\", \"YK68\", \"Z9E3\", \"WXOF\", \"7BU0\", \"ROH0\", \"V2R1\", \"OEV6\", \"U0JG\", \"EWII\",\n    \"4234\", \"SWFE\", \"5G3Y\", \"LJM3\", \"WQ8A\", \"KOKH\", \"5Y3I\", \"AMLA\", \"ZBMC\", \"4V2N\", \"KTE0\", \"4YK8\", \"QSH9\", \"IT3W\",\n    \"M2AN\", \"ADEV\", \"I5J7\", \"A046\", \"KZ7E\", \"IFE4\", \"Y2KE\", \"5DCX\", \"H87H\", \"U994\", \"Q4FH\", \"S3W9\", \"14ZJ\", \"WJWV\",\n    \"18HW\", \"DUVY\", \"8Q2Q\", \"987M\", \"O34W\", \"OM23\", \"10OP\", \"X7CF\", \"AGCH\", \"7YPE\", \"AYYJ\", \"SI5O\", \"L7NM\", \"VZ5X\",\n    \"XWKP\", \"S2I2\", \"XPMX\", \"TQOL\", \"7ZF2\", \"RMT2\", \"LBE9\", \"UW7S\", \"40BS\", \"G51S\", \"PLP8\", \"DIML\", \"W6K4\", \"PVRE\",\n    \"RU01\", \"52C7\", \"UMNF\", \"1A4R\", \"3V78\", \"JQTW\", \"NI2V\", \"H206\", \"40VX\", \"VG5L\", \"6I2A\", \"H8DI\", \"GCAC\", \"MKJ7\",\n    \"EE24\", \"SY4O\", \"P94T\", \"COV8\", \"0GB0\", \"Z5BV\", \"0VNR\", \"9PRQ\", \"J608\", \"H77X\", \"Q9MI\", \"URBJ\", \"YS1Q\", \"A8UV\",\n    \"4ESB\", \"O1G5\", \"5D7A\", \"CTHH\", \"R4P3\", \"0SIK\", \"6D0T\", \"HX92\", \"2O9X\", \"GC8R\", \"S31C\", \"ZZ5M\", \"Q1SD\", \"GFJZ\",\n    \"X7T1\", \"XXWK\", \"KRX7\", \"CAPX\", \"A5JB\", \"3I5L\", \"468S\", \"5PJT\", \"FQIP\", \"CIH0\", \"HVCS\", \"GNHV\", \"RF7F\", \"Z3H1\",\n    \"NTU0\", \"QPDA\", \"Z0PP\", \"GAIR\", \"DUI5\", \"V3I0\", \"VDLC\", \"WF8P\", \"4248\", \"OEXB\", \"D9KU\", \"I2KM\", \"GJSU\", \"1MTS\",\n    \"1PBR\", \"HW4M\", \"GQT5\", \"J7R1\", \"UG80\", \"Q0D6\", \"HOH2\", \"6Q94\", \"U03K\", \"T03X\", \"0V5X\", \"ODA1\", \"73HM\", \"2VNZ\",\n    \"L0R3\", \"URYT\", \"P5QZ\", \"BFGF\", \"1KJU\", \"5Q2P\", \"W6ZN\", \"TYDZ\", \"9APZ\", \"H442\", \"72GG\", \"S8BK\", \"7465\", \"WK41\",\n    \"DG10\", \"DI6H\", \"PQ55\", \"QB36\", \"PBBE\", \"DLHE\", \"3P47\", \"CUXO\", \"P97L\", \"BIOD\", \"AN9D\", \"VJVV\", \"5BO4\", \"IKQ3\",\n    \"JQLE\", \"OLYB\", \"ASKG\", \"KBP1\", \"TQSR\", \"L8PE\", \"8GUA\", \"CIM4\", \"09TB\", \"SGJ4\", \"JDOC\", \"ZHDL\", \"XG98\", \"2SHK\",\n    \"RCTC\", \"OHZP\", \"TMI8\", \"HFNT\", \"I0NG\", \"K0IH\", \"Z4XV\", \"OS6S\", \"40IS\", \"83BV\", \"S21E\", \"TB2P\", \"UUK2\", \"8PZN\",\n    \"0MY8\", \"T620\", \"J44A\", \"8EGF\", \"43HH\", \"NTVA\", \"F09Q\", \"IUXQ\", \"V341\", \"SGH1\", \"F4CO\", \"DURC\", \"QSUZ\", \"RZGU\",\n    \"W225\", \"K67X\", \"HO64\", \"BQ6S\", \"5QME\", \"9U4R\", \"3W6S\", \"ZDDZ\", \"D1GY\", \"I5V8\", \"PNBT\", \"QAFK\", \"JQT5\", \"A62J\",\n    \"EJFT\", \"5BL8\", \"SC7J\", \"1QTD\", \"35JY\", \"FVK9\", \"LF8Q\", \"IKNY\", \"0R5D\", \"PUV7\", \"OM7X\", \"SVVI\", \"XU1X\", \"0RF4\",\n    \"1E9B\", \"SFOV\", \"1N83\", \"K1JY\", \"P621\", \"CI2Z\", \"GJLL\", \"X12T\", \"7I99\", \"ZU99\", \"3MCI\", \"PCTN\", \"Q8ZP\", \"GFWZ\",\n    \"MG6Q\", \"NNEM\", \"KQPN\", \"NCQB\", \"RFXW\", \"3LKD\", \"T5NI\", \"J185\", \"RJQ3\", \"1UX7\", \"SNFS\", \"HHRP\", \"PCVL\", \"VK1V\",\n    \"1A5J\", \"2DE8\", \"8IS0\", \"0VH6\", \"XLNM\", \"98CO\", \"52MD\", \"AHT8\", \"I4Q9\", \"58R4\", \"A0QD\", \"AXO2\", \"9E7I\", \"KPCL\",\n    \"AO9D\", \"93OF\", \"6SOA\", \"HZQD\"],\n    \n    \"E\" : [\"1O9N\", \"KN02\", \"QK7Q\", \"E10W\", \"KGNH\", \"THV6\", \"G9EL\", \"CDEI\", \"GSD4\", \"NDQM\", \"TEGY\", \"E9RX\",\n    \"X736\", \"6LVH\", \"2FU8\", \"P9ZD\", \"MDNG\", \"7B8U\", \"CUIA\", \"HFA0\", \"XPM3\", \"K8K9\", \"SSJK\", \"3YY7\", \"2F20\", \"PVCK\",\n    \"RX2B\", \"S5T3\", \"B6L0\", \"ABRV\", \"2TQM\", \"R7VS\", \"4CGS\", \"2DKM\", \"ZY3J\", \"7KUH\", \"JWGR\", \"V4Z9\", \"JSR3\", \"AU3U\",\n    \"84GX\", \"S6BN\", \"0PTR\", \"F5GN\", \"XCH8\", \"NTOV\", \"AUMY\", \"DAPO\", \"UXLT\", \"M46I\", \"JZUT\", \"0L3H\", \"BAR9\", \"39OW\",\n    \"PN17\", \"RTGL\", \"8578\", \"JLQT\", \"44PF\", \"IAL9\", \"1ZI2\", \"GLAS\", \"SLG0\", \"L9N7\", \"7MND\", \"WSDH\", \"75PB\", \"ENTK\",\n    \"HXOW\", \"CBF4\", \"EEFV\", \"BYK7\", \"7SIF\", \"Z661\", \"O7RI\", \"DZ46\", \"7LYW\", \"3259\", \"XCMV\", \"TJL2\", \"G4AR\", \"BBFR\",\n    \"KS9W\", \"CI49\", \"QVB8\", \"FW92\", \"BYH7\", \"KGRQ\", \"XJSO\", \"THQF\", \"A8TN\", \"KTAW\", \"OP8D\", \"KJP6\", \"FCUW\", \"WRM5\",\n    \"P4OS\", \"T6PC\", \"8JIT\", \"M4E4\", \"CV17\", \"HI47\", \"G2LE\", \"7RQH\", \"HURO\", \"N1I9\", \"A4R6\", \"LQTQ\", \"0HJM\", \"WYFS\",\n    \"9VI7\", \"LVSJ\", \"1L1G\", \"44K8\", \"DMAM\", \"Z10X\", \"ZDBM\", \"EDCH\", \"8TSN\", \"KJJR\", \"8QUF\", \"H7TV\", \"H6KD\", \"9SHH\",\n    \"DQ3S\", \"CBH3\", \"OXSJ\", \"UF4I\", \"ZFZ6\", \"D2MQ\", \"FM4H\", \"RHKZ\", \"8C0E\", \"NYX8\", \"0K6Q\", \"S14U\", \"Y8FU\", \"3KT8\",\n    \"QCLS\", \"79K4\", \"4RO5\", \"RYDW\", \"K5ZG\", \"THO1\", \"EGM8\", \"7OEV\", \"KR4H\", \"OI6K\", \"5J9J\", \"Q9RY\", \"EHZL\", \"HC55\",\n    \"ZESN\", \"O4TM\", \"YSDT\", \"SYO6\", \"5706\", \"H64W\", \"X348\", \"KNKM\", \"XB04\", \"LHUO\", \"82O7\", \"ODCQ\", \"X56D\", \"KRLL\",\n    \"K8BX\", \"763X\", \"8FE5\", \"YXQS\", \"GBJG\", \"Q7BM\", \"RYZA\", \"LNU1\", \"PGR6\", \"X1RE\", \"4CBF\", \"PPIJ\", \"LOKM\", \"AP3R\",\n    \"KCLR\", \"SVNC\", \"E9TT\", \"NTK7\", \"RSLG\", \"VT7X\", \"SX2D\", \"JPOE\", \"BAZP\", \"E3F5\", \"DUUO\", \"ZYLX\", \"B99W\"],\n    \n    \"F\" : [\"LR0Q\", \"EBYP\", \"8WVH\", \"PI84\", \"7BS8\", \"9YDK\", \"NJEL\", \"6Y0C\", \"62WM\", \"CLZW\", \"QGPI\", \"7N64\",\n    \"LAF0\", \"8OIU\", \"6Q64\", \"WFUX\", \"47XQ\", \"KCNP\", \"EEBA\", \"ZEMY\", \"8UXW\", \"18XF\", \"Z83X\", \"GWJ0\", \"0UFP\", \"TD9M\",\n    \"ZX30\", \"K0PC\", \"WE84\", \"L8PI\", \"YGNG\", \"SZGB\", \"BJD4\", \"1PIP\", \"2R4J\", \"XCUS\", \"B7JG\", \"14AS\", \"W4P3\", \"RGKS\",\n    \"HBIK\", \"YH04\", \"B6OY\", \"LVWS\", \"7AYT\", \"SNAJ\", \"KJ1C\", \"B973\", \"OPMY\", \"S6JO\", \"YR8S\", \"SZMQ\", \"3L29\", \"5MS6\",\n    \"7ETC\", \"R5BM\", \"COF3\", \"MNUK\", \"0Z2L\", \"XVBK\", \"SW0I\", \"DO3C\", \"TNTD\", \"69QH\", \"W3FE\", \"V1JB\", \"YFN0\", \"AL4X\",\n    \"ZPYR\", \"BGOJ\", \"Q0MI\", \"SVYE\", \"SV9F\", \"999W\", \"BAAR\", \"JR09\", \"88SV\", \"MGUV\", \"1TG3\", \"QCUE\", \"H5D6\", \"MUF8\",\n    \"NS65\", \"5X0K\", \"H8RL\", \"Y8YO\", \"BG72\", \"G7VP\", \"4LI2\", \"JT2D\", \"MZH4\", \"BD48\", \"QNXB\", \"34JC\", \"OSPG\", \"DNEZ\",\n    \"OQ7H\", \"ZU0L\", \"WEQ7\", \"1GK0\", \"M72L\", \"D5GR\", \"7M83\", \"SUF8\", \"25D8\", \"C9R2\", \"3OYQ\", \"8DNT\", \"AMU3\", \"X7KZ\",\n    \"7ZTG\", \"19PA\", \"Z40C\", \"Z0QI\", \"5W9A\", \"DVMP\", \"RSCU\", \"G6L5\", \"3K9S\", \"SZMF\", \"TW5S\", \"3F3A\", \"OIPW\", \"CRKO\",\n    \"ZRRP\", \"242Y\", \"SUXL\"]\n    },\n    \"selections\": [\"KS9W\", \"AU3U\", \"CUXO\", \"X7T1\", \"AMU3\", \"KGNH\", \"5Q2P\", \"MUF8\", \"WS6M\", \"18HW\", \"N3RW\", \"LVWS\",\n    \"6LVH\", \"5MS6\", \"PE0E\", \"TXTN\", \"AR62\", \"IFE4\", \"4YK8\", \"DGV7\", \"MGSL\", \"999W\", \"KNKM\", \"AGCH\", \"K99F\", \"LP52\",\n    \"9PRQ\"]\n    },\n    letters: ['A', 'B', 'C', 'D', 'E', 'F'],\n    executionTime: 0\n  }\n\n  getLetter = () => {\n    let highest = Math.max(...this.state.matches)\n    let index = this.state.matches.indexOf(highest)\n    return this.state.letters[index]\n  }\n\n  calculateMatches = () => {\n    // Without the next line it will continue to keep increasing matches.\n    let matchesLocal = [0,0,0,0,0,0]\n    let t1 = Date.now()\n    const { data } = this.state\n    let targets = data.selections\n    let groups = Object.keys(data.groups).length\n    for (let i = 0; i < groups; i++) {\n      let stringsList = Object.values(data.groups)[i]\n      for (let y = 0; y < stringsList.length; y++) {\n        if (targets.includes(stringsList[y])) {\n          matchesLocal[i]++\n        }\n      }\n    }\n    let t2 = Date.now()\n    let timeTaken = t2-t1\n    this.setState({\n      matches: matchesLocal,\n      hasRun: true,\n      executionTime: timeTaken\n    })\n  }\n\n  render() {\n    const { matches, executionTime } = this.state\n    return(\n      <div className=\"App\">\n        <h1>Dart Fresh Tech Test</h1>\n        <p>Given a data set of 6 groups of 4 character strings, return which one has the most strings matching elements in the selections array.</p>\n        <button onClick={() => this.calculateMatches()}>Caclulate Matches</button>\n        { this.state.hasRun &&\n          <>\n            <h2>The highest set {this.getLetter()}, has {Math.max(...matches)} matches.</h2>\n            <li>List A has {matches[0]} matching values</li>\n            <li>List B has {matches[1]} matching values</li>\n            <li>List C has {matches[2]} matching values</li>\n            <li>List D has {matches[3]} matching values</li>\n            <li>List E has {matches[4]} matching values</li>\n            <li>List F has {matches[5]} matching values</li>\n            <p>This program ran in {executionTime} milliseconds</p>\n          </>\n        }\n\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}